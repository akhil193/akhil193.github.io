---
categories: spoj
comments: true
img: https://qph.ec.quoracdn.net/main-qimg-f939681b0b47e5540398244db5c8966f?convert_to_webp=true
layout: programming_post
seo:
  description: Here is the solution for programming question ACPC10D on spoj
  tags:
  - solution
  - source code
  - programming
  - spoj
  - ACPC10D Solution
tags:
- competitive-programming
- programming
title: SPOJ ACPC10D Solution
---
The correct, optimal and working solution for programming question ACPC10D on spoj

<div class="ui secondary pointing large menu">
  <a class="grey item" data-tab="problem-statement">
    Problem Statement
  </a>
  <a class="active item grey" data-tab="solution">
    Solution
  </a>
</div>
<div class="ui bottom attached tab" data-tab="problem-statement">
    <iframe src="http://www.spoj.com/problems/ACPC10D/" width="100%" height="600px" style="overflow: scroll; border: none;"></iframe>
</div>
<div class="ui bottom attached active tab" data-tab="solution">
{% highlight cpp %}

/*
 * ACPC10D.cpp
 *
 *  Created on: May 28, 2014
 *      Author: Arpit Bhayani
 */

#include <cstdio>
#include <cstdlib>
#include <iostream>

using namespace std;

#define DEBUG 0
#define gc getchar
#define ll long long

int min2(int a , int b) {
	return a < b ? a : b;
}

int min3( int a , int b , int c ) {
	return min2(a,min2(b,c));
}

int min4( int a , int b , int c , int d ) {
	return min2 ( a , min3(b,c,d));
}

int main(int argc, char * argv[]) {

	int n , count = 1;
	scanf("%d", &n);
	while (n != 0) {

		int array[n][3];
		for ( int i = 0 ; i < n ; i++ ) {
			cin >> (array[i][0]);
			cin >> (array[i][1]);
			cin >> (array[i][2]);
		}

		array[0][2] += array[0][1];

		array[1][0] += array[0][1];
		array[1][1] += min3(array[1][0] , array[0][1] , array[0][2]);
		array[1][2] += min3(array[1][1] , array[0][1] , array[0][2]);


		for ( int i = 2 ; i < n ; i++ ) {
			array[i][0] += min2(array[i-1][0] , array[i-1][1]);
			array[i][1] += min4(array[i][0] , array[i-1][0] , array[i-1][1] , array[i-1][2]);
			array[i][2] += min3(array[i][1] , array[i-1][1],array[i-1][2]);
		}

		cout << count << ". " << array[n-1][1] << endl;

		scanf("%d", &n);
		count++;
	}
	return 0;
}


{% endhighlight %}
</div>
